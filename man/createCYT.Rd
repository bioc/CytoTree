% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllClasses.R
\name{createCYT}
\alias{createCYT}
\title{create a CYT object}
\usage{
createCYT(
  raw.data,
  markers = NULL,
  meta.data = NULL,
  batch = NULL,
  batch.correct = FALSE,
  normalization.method = "none",
  verbose = FALSE,
  ...
)
}
\arguments{
\item{raw.data}{matrix. Raw data read from FCS file after performing
preprocessing.}

\item{markers}{vector. Detailed marker information in the gate of
flow cytometer. The default value is the colnames of `raw.data`}

\item{meta.data}{data.frame. Raw metadata of each cell.
Columns "cell" and "stage" are required. If not input, the meta.data
will be generated with default the name of FCS data.}

\item{batch}{vector. Batch covariate (only one batch allowed).
Method to correct batch effect
function is refered to \code{\link[sva]{ComBat}}.}

\item{batch.correct}{logical. Whether to correct batch effect.
If TRUE, batch must be provided.}

\item{normalization.method}{character. Normalization and transformation
method. Whether to normalize and log transformed of raw.data.
In CytoTree workflow, it's better to perform transformation of
FCS data using \code{runExprsExtract} or \code{runExprsMerge}
before creating an CYT object. \code{CytoTree} only provide
log transform method. If you need to using truncateTransform,
scaleTransform, linearTransform, quadraticTransform and
lnTransform, see \code{flowCore} for more
information. And \code{runExprsExtract} in
\code{CytoTree}, autoLgcl, cytofAsinh, logicle, arcsinh,
and logAbs can be used to perform the transformation of FCS data.}

\item{verbose}{logical. Whether to print calculation progress.}

\item{...}{paramters pass to \code{correctBatchCYT} function.}
}
\value{
A CYT object with raw.data and markers and meta.data
}
\description{
This function is about how to build a CYT object.
   A CYT object is the base for the whole analyzing workflow
   of flow and mass cytometry data.
}
\examples{


# Read fcs files
fcs.path <- system.file("extdata", package = "CytoTree")
fcs.files <- list.files(fcs.path, pattern = '.FCS$', full = TRUE)

fcs.data <- runExprsMerge(fcs.files, comp = FALSE, transformMethod = "none")

# Refine colnames of fcs data
recol <- c(`FITC-A<CD43>` = "CD43", `APC-A<CD34>` = "CD34", 
           `BV421-A<CD90>` = "CD90", `BV510-A<CD45RA>` = "CD45RA", 
           `BV605-A<CD31>` = "CD31", `BV650-A<CD49f>` = "CD49f",
           `BV 735-A<CD73>` = "CD73", `BV786-A<CD45>` = "CD45", 
           `PE-A<FLK1>` = "FLK1", `PE-Cy7-A<CD38>` = "CD38")
colnames(fcs.data)[match(names(recol), colnames(fcs.data))] = recol
fcs.data <- fcs.data[, recol]

# Build the CYT object
cyt <- createCYT(raw.data = fcs.data,
                 normalization.method = "log",
                 verbose = TRUE)

# See information
cyt


}
